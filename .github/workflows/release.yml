name: Create release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  setup-validation:
    outputs:
      version: ${{ steps.gather-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract version from Cargo.toml
        id: gather-version
        run: echo version=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "arcanist").version') >> $GITHUB_OUTPUT
      - name: Ensure release does not already exist
        run: |
          git fetch origin &> /dev/null
          version=${{ steps.gather-version.outputs.version }}
          if [[ -n "$(git tag -l v${version})" ]]; then
            echo "A release '${version}' already exists." >&2
            exit 1
          else
            echo "Tag 'v${version}' will be created"
          fi
  build-lint:
    uses: ./.github/workflows/build_lint.yml
    needs: setup-validation
    with:
      for_release: true
      version: ${{ needs.setup-validation.outputs.version }}
  release:
    needs: [setup-validation, build-lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Generate release notes
        run: |
          sed 's/{version}/${{ needs.setup-validation.outputs.version }}/g' ${{ github.workspace }}/.github/release_notes.template \
          > ${{ github.workspace }}/.github/release_notes.txt
      - name: Create release
        uses: softprops/action-gh-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          generate_release_notes: true
          name: Arcanist - ${{ needs.setup-validation.outputs.version }}
          tag_name: v${{ needs.setup-validation.outputs.version }}
          body_path: ${{ github.workspace }}/.github/release_notes.txt
          target_commitish: ${{ github.base_ref }}
          prerelease: true
  upload-to-release:
    needs: [setup-validation, build-lint, release]
    permissions:
      contents: write
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: arcanist_${{ needs.setup-validation.outputs.version }}_${{ matrix.target }}
          path: ${{ github.workspace }}/target/${{ matrix.target }}/release
      - name: Upload arcanist binary to release
        run: |
          mv ${{ github.workspace }}/target/${{ matrix.target }}/release/arcanist${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }} \
          arcanist_${{ needs.setup-validation.outputs.version }}_${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
          gh release upload v${{ needs.setup-validation.outputs.version }} \
          arcanist_${{ needs.setup-validation.outputs.version }}_${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Create release on
on:
  pull_request:
    branches:
      - main
jobs:
  setup:
    outputs:
      version: ${{ steps.gather-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from Cargo.toml
        id: gather-version
        run: echo version=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "arcanist").version') >> $GITHUB_OUTPUT
  build:
    needs: setup
    strategy:
      matrix:
        os-target:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os-target.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.70.0
          targets: ${{ matrix.os-target.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Install aarch64-unknown-linux-gnu requisites
        run: sudo apt-get install g++-aarch64-linux-gnu -y
        if: matrix.os-target.target == 'aarch64-unknown-linux-gnu'
      - name: Run cargo check
        run: cargo build --release --target ${{ matrix.os-target.target }}
      - name: Upload artifacts for reuse in release job
        uses: actions/upload-artifact@v3
        with:
          name: arcanist_${{ needs.setup.outputs.version }}_${{ matrix.os-target.target }}
          path: ${{ github.workspace }}/target/${{ matrix.os-target.target }}/release/arcanist${{ matrix.os-target.os == 'windows-latest' && '.exe' || '' }}
          if-no-files-found: error
